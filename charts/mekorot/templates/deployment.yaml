{{- if .Values.app.deployment.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.deployment.name }}
  {{- with .Values.app.deployment.labels }}
  labels:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.app.autoscaling.enabled }}
  replicas: {{ .Values.app.replicaCount }}
  {{- end }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.app.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.app.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.app.serviceAccount.enabled }}
      serviceAccountName: {{ .Values.app.serviceAccount.name }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.app.podSecurityContext | nindent 8 }}
      {{- with .Values.app.efsVolume }}
      volumes:
        - name: {{ .name }}
          persistentVolumeClaim:
            claimName: {{ $.Values.app.persistentVolume.efs.pvcName }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.app.securityContext | nindent 12 }}
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          {{- with .Values.app.efsVolume }}
          volumeMounts:
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ default 80 .Values.app.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ default "/health" .Values.app.livenessProbe }}
              port: http
            initialDelaySeconds: {{ default 5 .Values.app.initialDelaySeconds }}
          readinessProbe:
            httpGet:
              path: {{ default "/health" .Values.app.readinessProbe }}
              port: http
            initialDelaySeconds: {{ default 5 .Values.app.initialDelaySeconds }}
          resources:
            {{- toYaml .Values.app.resources | nindent 12 }}
          {{- with .Values.app.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.app.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.app.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.app.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}