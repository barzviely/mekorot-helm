# Values for sample-app-1 using Mekorot chart structure with ConfigMap  
nameOverride: "sample-app-1"
fullnameOverride: ""

app:
  # Deployment configuration
  deployment:
    enabled: true
    name: "sample-app-1"
    labels:
      app: sample-app-1
      tier: frontend
      autoscaling: enabled
      
  # Replica and scaling (HPA enabled)
  replicaCount: 3
  autoscaling:
    enabled: true  # Note: mekorot chart needs HPA template to be added
    
  # Container image
  image:
    repository: nginx
    tag: "1.25-alpine"
    pullPolicy: IfNotPresent
    
  # Container port  
  containerPort: 80
  
  # Health checks
  livenessProbe: "/"
  readinessProbe: "/health"
  initialDelaySeconds: 3
  
  # Resources
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 150m
      memory: 128Mi
      
  # Node selection (using default nodes)
  nodeSelector:
    type: default
  affinity: {}
  tolerations: []
  
  # Service configuration
  service:
    enabled: true
    name: "sample-app-1-service"
    type: ClusterIP
    port: 80
    labels:
      app: sample-app-1
      
  # ConfigMap for nginx configuration
  config:
    enabled: true
    data:
      default.conf: |
        server {
            listen 80;
            server_name localhost;
            
            location / {
                root /usr/share/nginx/html;
                index index.html index.htm;
                add_header X-App-Name "Sample App 1 - Mekorot Chart" always;
            }
            
            location /health {
                access_log off;
                return 200 "healthy from mekorot chart\n";
                add_header Content-Type text/plain;
            }
        }
      index.html: |
        <!DOCTYPE html>
        <html>
        <head>
            <title>Sample App 1 - Mekorot Chart</title>
            <style>
                body { font-family: Arial, sans-serif; margin: 40px; background: #f0f0f0; }
                .container { background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
                h1 { color: #333; }
                .info { background: #e8f4fd; padding: 15px; border-left: 4px solid #1976d2; margin: 20px 0; }
                .success { background: #e8f5e8; border-left: 4px solid #4caf50; }
                .mekorot { background: #fff3e0; border-left: 4px solid #ff9800; }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>ðŸš€ Sample App 1</h1>
                <p>This application is deployed using the <strong>Mekorot production-ready Helm chart</strong>!</p>
                <div class="info mekorot">
                    <strong>ðŸŽ¯ Mekorot Chart Features:</strong>
                    <ul>
                        <li>âœ… Deployment, Service, Ingress</li>
                        <li>âœ… ConfigMap & External Secrets</li>
                        <li>âœ… PersistentVolumes & EFS support</li>
                        <li>âœ… Service Accounts & RBAC</li>
                        <li>âœ… Storage Classes & PVC</li>
                        <li>âœ… Feature flags for everything</li>
                    </ul>
                </div>
                <div class="info success">
                    <strong>âœ… Current Configuration:</strong>
                    <ul>
                        <li>Nginx with custom config via ConfigMap</li>
                        <li>Health checks on /health endpoint</li>
                        <li>Resource limits: 50m CPU, 64Mi memory</li>
                        <li>Node selector: default</li>
                        <li>Ready for HPA scaling</li>
                    </ul>
                </div>
                <p><strong>Health Check:</strong> <a href="/health">/health</a></p>
                <p><em>Powered by Mekorot Universal Chart ðŸŽ¯</em></p>
            </div>
        </body>
        </html>
        
  # EFS Volume configuration (for configmap mounting)
  efsVolume:
    name: nginx-config
    mountPath: /etc/nginx/conf.d
    
  # Ingress (disabled for now)
  ingress:
    enabled: false
    
  # Service Account
  serviceAccount:
    create: false
    enabled: false
    
  # External Secrets (disabled)
  externalSecret:
    enabled: false
    
  # Storage (disabled for this simple example)
  storageClass:
    enabled: false
  persistentVolume:
    enabled: false
  persistentVolumeClaim:
    enabled: false
    
  # Pod settings
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  imagePullSecrets: []
